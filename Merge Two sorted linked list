class Solution
{
public:
    ListNode *mergeTwoLists(ListNode *l1, ListNode *l2)
    {
        if (!l1||!l2){return (!l2)? l1 : l2;}
		// handle null input lists
		
        ListNode *head, *p;

        if (l1->val <= l2->val){ 
            head = l1;
            l1 = l1->next;
        }
        else {
            head = l2;
            l2 = l2->next;
        }
		// pick starting point for head pointer
        p = head;
		// and then just update the tail pointer with next lowest valued node until empty/null

        while (l1 && l2)
        {
            if (l1->val <= l2->val)
            {
                p->next = l1;
                l1 = l1->next;
                p = p->next;
            }
            else
            {
                p->next = l2;
                l2 = l2->next;
                p = p->next;
            }
        }

        if (l1){p->next = l1;}
        if (l2){p->next = l2;}
		// no need to reach end of both lists
		// remaining elements are sorted, so just link at the tail
        return head;
    }
};
c

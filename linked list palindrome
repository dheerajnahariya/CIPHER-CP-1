/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        vector<int> v;
        ListNode* temp=head;
        while(temp!=NULL)
        {
            cout<<temp->val<<" ";
            v.push_back(temp->val);
            temp=temp->next;
        }
        
        cout<<"\n";
        
        int n=v.size();
        bool flag=true;
        
        for(int i=0;i<n;i++)
            cout<<v[i]<<" ";
        cout<<"\n";
        int i=0;
        while(i<n)
        {
            if(v[i]!=v[n-1])
            { 
                cout<<i<<" "<<n-1<<"\n";
                cout<<v[i]<<" "<<v[n-1];
                flag=false;
                break;
            }
            i++;
            n--;
        }
        
        return flag;
        
    }
};
